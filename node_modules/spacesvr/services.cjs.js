'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var THREE = require('three');
var cannon = require('@react-three/cannon');
var ShopifyBuy = require('shopify-buy');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var ShopifyBuy__default = /*#__PURE__*/_interopDefaultLegacy(ShopifyBuy);

var useTrimeshCollision = function useTrimeshCollision(geometry) {
  var vertices = geometry.attributes.position.array; // @ts-ignore

  var indices = geometry.index.array; // @ts-ignore

  var _useTrimesh = cannon.useTrimesh(function () {
    return {
      type: "Static",
      args: [vertices, indices]
    };
  }),
      hitbox = _useTrimesh[0];

  return hitbox;
};
var useConvexCollision = function useConvexCollision(geometry) {
  var geo = react.useMemo(function () {
    return new THREE.Geometry().fromBufferGeometry(geometry);
  }, [geometry]);

  var _useConvexPolyhedron = cannon.useConvexPolyhedron(function () {
    return {
      type: "Static",
      args: geo
    };
  }),
      hitbox = _useConvexPolyhedron[0];

  return hitbox;
};

var useShopify = function useShopify(props) {
  var domain = props.domain,
      token = props.token;
  var client = ShopifyBuy__default['default'].buildClient({
    domain: domain,
    storefrontAccessToken: token
  });

  var _useState = react.useState(),
      products = _useState[0],
      setProducts = _useState[1];

  var _useState2 = react.useState(),
      checkout = _useState2[0],
      setCheckout = _useState2[1];

  var _useState3 = react.useState("false"),
      checkoutOpen = _useState3[0],
      setCheckoutOpen = _useState3[1];

  react.useEffect(function () {
    if (!products && !checkout) {
      client.product.fetchAll() // @ts-ignore
      .then(function (shopifyProducts) {
        return setProducts(shopifyProducts);
      });
      client.checkout.create() // @ts-ignore
      .then(function (shopifyCheckout) {
        return setCheckout(shopifyCheckout);
      });
    }
  }, [products, checkout]);
  return {
    client: client,
    products: products,
    checkout: checkout,
    setCheckout: setCheckout,
    checkoutOpen: checkoutOpen,
    setCheckoutOpen: setCheckoutOpen
  };
};

exports.useConvexCollision = useConvexCollision;
exports.useShopify = useShopify;
exports.useTrimeshCollision = useTrimeshCollision;
import React from "react";