import { useMemo, useState, useEffect } from 'react';
import { Geometry } from 'three';
import { useTrimesh, useConvexPolyhedron } from '@react-three/cannon';
import ShopifyBuy from 'shopify-buy';

const useTrimeshCollision = geometry => {
  const vertices = geometry.attributes.position.array; // @ts-ignore

  const indices = geometry.index.array; // @ts-ignore

  const [hitbox] = useTrimesh(() => ({
    type: "Static",
    args: [vertices, indices]
  }));
  return hitbox;
};
const useConvexCollision = geometry => {
  const geo = useMemo(() => new Geometry().fromBufferGeometry(geometry), [geometry]);
  const [hitbox] = useConvexPolyhedron(() => ({
    type: "Static",
    args: geo
  }));
  return hitbox;
};

const useShopify = props => {
  const {
    domain,
    token
  } = props;
  const client = ShopifyBuy.buildClient({
    domain: domain,
    storefrontAccessToken: token
  });
  const [products, setProducts] = useState();
  const [checkout, setCheckout] = useState();
  const [checkoutOpen, setCheckoutOpen] = useState("false");
  useEffect(() => {
    if (!products && !checkout) {
      client.product.fetchAll() // @ts-ignore
      .then(shopifyProducts => setProducts(shopifyProducts));
      client.checkout.create() // @ts-ignore
      .then(shopifyCheckout => setCheckout(shopifyCheckout));
    }
  }, [products, checkout]);
  return {
    client,
    products,
    checkout,
    setCheckout,
    checkoutOpen,
    setCheckoutOpen
  };
};

export { useConvexCollision, useShopify, useTrimeshCollision };
import React from "react";