{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjaminha/Documents/meditation-world/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Vector3, TextureLoader } from \"three\";\nimport { StandardEnvironment, Background, Logo } from \"spacesvr\";\n\nfunction App() {\n  const loader = new TextureLoader();\n  return /*#__PURE__*/_jsxDEV(StandardEnvironment, {\n    player: {\n      pos: new Vector3(5, 1, 0),\n      rot: Math.PI\n    },\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      color: 0xffffff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {\n      floating: true,\n      rotating: true,\n      position: new Vector3(0, 1.25, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fog\", {\n      attach: \"fog\",\n      args: [0xffffff, 10, 90]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      \"rotation-x\": -Math.PI / 2,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        args: [200, 200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: loader.load('src/sand.jpg')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benjaminha/Documents/meditation-world/src/App.js"],"names":["Vector3","TextureLoader","StandardEnvironment","Background","Logo","App","loader","pos","rot","Math","PI","load"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAASA,OAAT,EAAkBC,aAAlB,QAAuC,OAAvC;AAEA,SAASC,mBAAT,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,UAAtD;;AAGA,SAASC,GAAT,GAAe;AACb,QAAMC,MAAM,GAAI,IAAIL,aAAJ,EAAhB;AACA,sBACI,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAE,IAAIP,OAAJ,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAP;AAA6BQ,MAAAA,GAAG,EAAEC,IAAI,CAACC;AAAvC,KAA7B;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,QAAQ,EAAE,IAAIV,OAAJ,CAAY,CAAZ,EAAe,IAAf,EAAqB,CAArB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,MAAM,EAAC,KAAZ;AAAkB,MAAA,IAAI,EAAE,CAAC,QAAD,EAAW,EAAX,EAAe,EAAf;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,oBAAY,CAACS,IAAI,CAACC,EAAN,GAAW,CAA7B;AAAA,8BACE;AAAqB,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAmB,QAAA,GAAG,EAAIJ,MAAM,CAACK,IAAP,CAAY,cAAZ;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;KAfQN,G;AAiBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Vector3, TextureLoader } from \"three\";\n\nimport { StandardEnvironment, Background, Logo } from \"spacesvr\";\n\n\nfunction App() {\n  const loader  = new TextureLoader();\n  return (\n      <StandardEnvironment player={{ pos: new Vector3(5, 1, 0), rot: Math.PI}}>\n        <Background color={0xffffff} />\n        <Logo floating rotating position={new Vector3(0, 1.25, 0)} />\n        <fog attach=\"fog\" args={[0xffffff, 10, 90]} />\n        <ambientLight />\n        <mesh rotation-x={-Math.PI / 2}>\n          <planeBufferGeometry args={[200, 200]} />\n          <ambientLight />\n          <meshBasicMaterial map = {loader.load('src/sand.jpg')}/>\n        </mesh>\n      </StandardEnvironment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}