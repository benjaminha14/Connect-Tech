{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminha/Documents/meditation-world/src/components/Floor.jsx\",\n    _s = $RefreshSig$();\n\nimport { BufferGeometry, PlaneBufferGeometry } from \"three\";\nimport { Vector3, TextureLoader, RepeatWrapping } from \"three\";\nimport * as THREE from \"three\";\nimport { useLoader } from \"react-three-fiber\";\nimport { StandardEnvironment, Background, Logo } from \"spacesvr\";\n\nconst Floor = () => {\n  _s();\n\n  const texture = useLoader(TextureLoader, 'sand.jpg');\n  texture.wrapS = texture.wrapT = RepeatWrapping;\n  texture.repeat = new THREE.Vector2(50, 50);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    \"rotation-x\": -Math.PI / 2,\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      args: [200, 200, 200, 200]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      map: texture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 16\n  }, this);\n};\n\n_s(Floor, \"DPn9Ts0h3TXc07M7VbzN9xij6Hs=\", false, function () {\n  return [useLoader];\n});\n\n_c = Floor;\nexport default Floor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Floor\");","map":{"version":3,"sources":["/Users/benjaminha/Documents/meditation-world/src/components/Floor.jsx"],"names":["BufferGeometry","PlaneBufferGeometry","Vector3","TextureLoader","RepeatWrapping","THREE","useLoader","StandardEnvironment","Background","Logo","Floor","texture","wrapS","wrapT","repeat","Vector2","Math","PI"],"mappings":";;;;;AACA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,OAApD;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAgCC,cAAhC,QAAsD,OAAtD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAASC,mBAAT,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,UAAtD;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGL,SAAS,CAACH,aAAD,EAAgB,UAAhB,CAAzB;AACAQ,EAAAA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,KAAR,GAAgBT,cAAhC;AACAO,EAAAA,OAAO,CAACG,MAAR,GAAiB,IAAIT,KAAK,CAACU,OAAV,CAAkB,EAAlB,EAAqB,EAArB,CAAjB;AAEA,sBAAW;AAAM,kBAAY,CAACC,IAAI,CAACC,EAAN,GAAW,CAA7B;AAAA,4BACP;AAAqB,MAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAU,GAAV,EAAc,GAAd;AAA3B;AAAA;AAAA;AAAA;AAAA,YADO,eAGP;AAAmB,MAAA,GAAG,EAAIN;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AAKC,CAVL;;GAAMD,K;UACcJ,S;;;KADdI,K;AAYF,eAAeA,KAAf","sourcesContent":["\nimport { BufferGeometry, PlaneBufferGeometry } from \"three\";\nimport { Vector3, TextureLoader,RepeatWrapping } from \"three\";\nimport * as THREE from \"three\";\nimport {useLoader} from \"react-three-fiber\"\nimport { StandardEnvironment, Background, Logo } from \"spacesvr\";\n\n\nconst Floor = () => {\n    const texture = useLoader(TextureLoader, 'sand.jpg');\n    texture.wrapS = texture.wrapT = RepeatWrapping;\n    texture.repeat = new THREE.Vector2(50,50);\n\n    return(    <mesh rotation-x={-Math.PI / 2}>\n        <planeBufferGeometry args={[200, 200,200,200]} />\n\n        <meshBasicMaterial map = {texture}/>\n        </mesh>);\n    };\n\n    export default Floor;\n"]},"metadata":{},"sourceType":"module"}