{"ast":null,"code":"import { BufferGeometry, BufferAttribute, LineBasicMaterial, Line, MathUtils } from '../../../build/three.module.js';\n\nfunction PositionalAudioHelper(audio, range, divisionsInnerAngle, divisionsOuterAngle) {\n  this.audio = audio;\n  this.range = range || 1;\n  this.divisionsInnerAngle = divisionsInnerAngle || 16;\n  this.divisionsOuterAngle = divisionsOuterAngle || 2;\n  var geometry = new BufferGeometry();\n  var divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n  var positions = new Float32Array((divisions * 3 + 3) * 3);\n  geometry.setAttribute('position', new BufferAttribute(positions, 3));\n  var materialInnerAngle = new LineBasicMaterial({\n    color: 0x00ff00\n  });\n  var materialOuterAngle = new LineBasicMaterial({\n    color: 0xffff00\n  });\n  Line.call(this, geometry, [materialOuterAngle, materialInnerAngle]);\n  this.type = 'PositionalAudioHelper';\n  this.update();\n}\n\nPositionalAudioHelper.prototype = Object.create(Line.prototype);\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n  var audio = this.audio;\n  var range = this.range;\n  var divisionsInnerAngle = this.divisionsInnerAngle;\n  var divisionsOuterAngle = this.divisionsOuterAngle;\n  var coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle);\n  var coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle);\n  var halfConeInnerAngle = coneInnerAngle / 2;\n  var halfConeOuterAngle = coneOuterAngle / 2;\n  var start = 0;\n  var count = 0;\n  var i, stride;\n  var geometry = this.geometry;\n  var positionAttribute = geometry.attributes.position;\n  geometry.clearGroups(); //\n\n  function generateSegment(from, to, divisions, materialIndex) {\n    var step = (to - from) / divisions;\n    positionAttribute.setXYZ(start, 0, 0, 0);\n    count++;\n\n    for (i = from; i < to; i += step) {\n      stride = start + count;\n      positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n      positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\n      positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n      count += 3;\n    }\n\n    geometry.addGroup(start, count, materialIndex);\n    start += count;\n    count = 0;\n  } //\n\n\n  generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n  generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n  generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0); //\n\n  positionAttribute.needsUpdate = true;\n  if (coneInnerAngle === coneOuterAngle) this.material[0].visible = false;\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material[0].dispose();\n  this.material[1].dispose();\n};\n\nexport { PositionalAudioHelper };","map":{"version":3,"sources":["/Users/benjaminha/Documents/Connect-Tech/node_modules/three/examples/jsm/helpers/PositionalAudioHelper.js"],"names":["BufferGeometry","BufferAttribute","LineBasicMaterial","Line","MathUtils","PositionalAudioHelper","audio","range","divisionsInnerAngle","divisionsOuterAngle","geometry","divisions","positions","Float32Array","setAttribute","materialInnerAngle","color","materialOuterAngle","call","type","update","prototype","Object","create","constructor","coneInnerAngle","degToRad","panner","coneOuterAngle","halfConeInnerAngle","halfConeOuterAngle","start","count","i","stride","positionAttribute","attributes","position","clearGroups","generateSegment","from","to","materialIndex","step","setXYZ","Math","sin","cos","min","addGroup","needsUpdate","material","visible","dispose"],"mappings":"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","sourcesContent":["import {\n\tBufferGeometry,\n\tBufferAttribute,\n\tLineBasicMaterial,\n\tLine,\n\tMathUtils\n} from '../../../build/three.module.js';\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.type = 'PositionalAudioHelper';\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = MathUtils.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = MathUtils.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n\nexport { PositionalAudioHelper };\n"]},"metadata":{},"sourceType":"module"}