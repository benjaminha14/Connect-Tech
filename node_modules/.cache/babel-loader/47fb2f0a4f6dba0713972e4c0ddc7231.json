{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benjaminha/Documents/Connect-Tech/src/components/TimerSky.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Sky } from \"@react-three/drei\";\n\nconst TimerSky = () => {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  function start() {\n    setIsActive(true);\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return /*#__PURE__*/_jsxDEV(TimerSky, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 6\n  }, this);\n};\n\n_s(TimerSky, \"HjAIbd49zoP8n+oOlWwUpn38Z08=\");\n\n_c = TimerSky;\nexport default TimerSky;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerSky\");","map":{"version":3,"sources":["/Users/benjaminha/Documents/Connect-Tech/src/components/TimerSky.js"],"names":["React","useState","useEffect","Sky","TimerSky","seconds","setSeconds","isActive","setIsActive","toggle","reset","start","interval","setInterval","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,GAAR,QAAkB,mBAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACC,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASQ,MAAT,GAAkB;AAChBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,KAAT,GAAiB;AACfJ,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,WAASG,KAAT,GAAgB;AACZH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAQ,GAAG,IAAf;;AACA,QAAIL,QAAJ,EAAc;AACZK,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BP,QAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCS,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AACD,GAVQ,EAUN,CAACL,QAAD,EAAWF,OAAX,CAVM,CAAT;AAYH,sBAEG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAFH;AAID,CAjCD;;GAAMD,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Sky} from \"@react-three/drei\"\n\nconst TimerSky = () => {\n    const [seconds, setSeconds] = useState(0);\n     const [isActive, setIsActive] = useState(false);\n\n     function toggle() {\n       setIsActive(!isActive);\n     }\n\n     function reset() {\n       setSeconds(0);\n       setIsActive(false);\n     }\n\n     function start(){\n         setIsActive(true);\n     }\n\n     useEffect(() => {\n       let interval = null;\n       if (isActive) {\n         interval = setInterval(() => {\n           setSeconds(seconds => seconds + 1);\n         }, 1000);\n       } else if (!isActive && seconds !== 0) {\n         clearInterval(interval);\n       }\n       return () => clearInterval(interval);\n     }, [isActive, seconds]);\n\n  return (\n\n     <TimerSky />\n  );\n};\n\nexport default TimerSky;\n"]},"metadata":{},"sourceType":"module"}